# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Unit Tests


on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ${{ matrix.os }}

    env:
      DISPLAY: ':99.0'
      #NO_NETWORK: 'True'
      FINALCIF_NO_3D: 'True'

    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9", "3.10" ]
        os: [ windows-latest, macos-latest, ubuntu-latest ]
        include:
          #- os: ubuntu-latest
          #  path: ~/.cache/pip
          - os: macos-latest
            path: ~/Library/Caches/pip
          - os: windows-latest
            path: ~\AppData\Local\pip\Cache

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -m pip install flake8 pytest

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --ignore=E203,E127,E128,E227,E501,W291,W503,E266
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics  --ignore=E203,E203,E127,E128,E227,E501,W291,W503,E266

      - name: Test with pytest
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            # Ubuntu needs this to be able to start pyqt5
            sudo apt-get -qq install libxcb-xinerama0 pyqt5-dev-tools
            xvfb-run --auto-servernum pytest
          else
            pytest
          fi

